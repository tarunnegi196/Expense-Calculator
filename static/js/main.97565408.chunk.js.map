{"version":3,"sources":["components/Expenses/ExpensesFilter.jsx","components/UI/Card.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.jsx","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.97565408.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import \"./Card.css\"\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues=props.dataPoints.map(dataPoint=>dataPoint.value);\r\n    const totalMaximum=Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n          <ChartBar\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\nexport default ExpensesChart;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nimport \"./Expenses.css\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  //const [userInput,setUserInput]=useState({\r\n  //    enteredTitle:\" \",\r\n  //   enteredAmount:\" \",\r\n  //   enteredDate:\" \"\r\n  //});\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    //    setUserInput({\r\n    //      ...userInput,\r\n    //      enteredTitle: event.target.value,\r\n    //})\r\n    //setUserInput((prevState)=>{\r\n    //    return{...prevState,enteredTitle:event.target.value};\r\n    //})\r\n  };\r\n  const AmountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    //setUserInput({\r\n    //...userInput,\r\n    //  enteredAmount: event.target.value,\r\n    //})\r\n  };\r\n  const DateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    //setUserInput({\r\n    //...userInput,\r\n    //    enteredDate: event.target.value,\r\n    //})\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    \r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={AmountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={DateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n      <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses)=>{\n      return[expense,...prevExpenses]\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}